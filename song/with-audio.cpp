#include <iostream>
#include <vector>
// #include <SFML/Audio.hpp>

int main() {
    // Load the audio file
    // sf::Music music;
    // if (!music.openFromFile("D:/Transfer_for_saving_space/Downloads")) {
    //     std::cout << "Error: Could not open audio file" << std::endl;
    //     return -1;
    // }

    // Start playing the audio
    music.play();

    // Lyrics in ASCII
    std::vector<int> lyrics = {
        78, 101, 118, 101, 114, 32, 71, 111, 110, 110, 97, 32, 71, 105, 118, 101, 32, 89, 111, 117, 32, 85, 112, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 108, 101, 116, 32, 121, 111, 117, 32, 100, 111, 119, 110, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 114, 117, 110, 32, 97, 114, 111, 117, 110, 100, 32, 97, 110, 100, 32, 100, 101, 115, 101, 114, 116, 32, 121, 111, 117, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 109, 97, 107, 101, 32, 121, 111, 117, 32, 99, 114, 121, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 115, 97, 121, 32, 103, 111, 111, 100, 98, 121, 101, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 116, 101, 108, 108, 32, 97, 32, 108, 105, 101, 32, 97, 110, 100, 32, 104, 117, 114, 116, 32, 121, 111, 117, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 103, 105, 118, 101, 32, 121, 111, 117, 32, 117, 112, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 108, 101, 116, 32, 121, 111, 117, 32, 100, 111, 119, 110, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 114, 117, 110, 32, 97, 114, 111, 117, 110, 100, 32, 97, 110, 100, 32, 100, 101, 115, 101, 114, 116, 32, 121, 111, 117, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 109, 97, 107, 101, 32, 121, 111, 117, 32, 99, 114, 121, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 115, 97, 121, 32, 103, 111, 111, 100, 98, 121, 101, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 116, 101, 108, 108, 32, 97, 32, 108, 105, 101, 32, 97, 110, 100, 32, 104, 117, 114, 116, 32, 121, 111, 117, 10
    };

    // Print the lyrics
    for (int ch : lyrics) {
        std::cout << (char)ch;
    }

    // Wait for the music to finish
    while (music.getStatus() == sf::SoundSource::Playing) {
        sf::sleep(sf::milliseconds(100));
    }

    return 0;
}


/* //To match lyrics with song
#include <iostream>
#include <vector>
#include <thread>  // For std::this_thread::sleep_for
#include <chrono>  // For std::chrono::milliseconds
#include <SFML/Audio.hpp>

int main() {
    // Load the audio file
    sf::Music music;
    if (!music.openFromFile("path/to/your/audiofile.ogg")) {
        std::cout << "Error: Could not open audio file" << std::endl;
        return -1;
    }

    // Start playing the audio
    music.play();

    // Lyrics in ASCII
    std::vector<int> lyrics = {
        78, 101, 118, 101, 114, 32, 71, 111, 110, 110, 97, 32, 71, 105, 118, 101, 32, 89, 111, 117, 32, 85, 112, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 108, 101, 116, 32, 121, 111, 117, 32, 100, 111, 119, 110, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 114, 117, 110, 32, 97, 114, 111, 117, 110, 100, 32, 97, 110, 100, 32, 100, 101, 115, 101, 114, 116, 32, 121, 111, 117, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 109, 97, 107, 101, 32, 121, 111, 117, 32, 99, 114, 121, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 115, 97, 121, 32, 103, 111, 111, 100, 98, 121, 101, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 116, 101, 108, 108, 32, 97, 32, 108, 105, 101, 32, 97, 110, 100, 32, 104, 117, 114, 116, 32, 121, 111, 117, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 103, 105, 118, 101, 32, 121, 111, 117, 32, 117, 112, 10,
        78, 101, 118, 101, 114, 103, 111, 110, 110, 97, 32, 108, 101, 116, 32, 121, 111, 117, 32, 100, 111, 119, 110, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 114, 117, 110, 32, 97, 114, 111, 117, 110, 100, 32, 97, 110, 100, 32, 100, 101, 115, 101, 114, 116, 32, 121, 111, 117, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 109, 97, 107, 101, 32, 121, 111, 117, 32, 99, 114, 121, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 115, 97, 121, 32, 103, 111, 111, 100, 98, 121, 101, 10,
        78, 101, 118, 101, 114, 32, 103, 111, 110, 110, 97, 32, 116, 101, 108, 108, 32, 97, 32, 108, 105, 101, 32, 97, 110, 100, 32, 104, 117, 114, 116, 32, 121, 111, 117, 10
    };

    // Total duration of the song in seconds
    float songDuration = 180.0f;  // For example, 180 seconds

    // Total number of characters in the lyrics
    size_t totalChars = lyrics.size();

    // Calculate delay per character in milliseconds
    float delayPerChar = (songDuration / totalChars) * 1000;

    // Print the lyrics with delays
    for (int ch : lyrics) {
        std::cout << (char)ch;
        std::this_thread::sleep_for(std::chrono::milliseconds(static_cast<int>(delayPerChar)));
    }

    // Wait for the music to finish
    while (music.getStatus() == sf::SoundSource::Playing) {
        sf::sleep(sf::milliseconds(100));
    }

    return 0;
}

*/